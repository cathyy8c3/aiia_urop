
  

    

      
ESTIMATED TIME TO COMPLETE: 8 minutes
      Note that you will have to answer all questions before you can click the Check button.

def test_str(expect, ans):
  # Strip away ' ' or " " wrapping string input answer
  # (check which, if any, are present - don't want to pull valid
  #  characters out of the center of a string, eg "That's crazy!",
  #  nor do we wish to accept an input with mismatched modifiers, 
  #  eg 'abc")
  if len(expect) == 0 or len(ans) == 0: return expect == ans

  if ans[0] == "'" and ans[-1] == "'": ans = ans.strip("'")
  elif ans[0] == '"' and ans[-1] == '"': ans = ans.strip('"')

  if expect[0] == "'": expect = expect.strip("'")
  elif expect[0] == '"': expect = expect.strip('"')

  return expect == ans

def test_list_str(expect, ans):
  # For a list that can be comprised of strings
  # Check that expect & ans are lists
  assert (expect[0] == '[' and expect[-1] == ']')
  if '[' not in ans or ']' not in ans: return False

  expect = list( expect.replace(' ','')[1:-1].split(',') )
  ans = list( ans.replace(' ','')[1:-1].split(',') )
  return len(expect) == len(ans) and not (False in [test_str(e,a) for (e,a) in zip(expect, ans)])

For the last expression in each question below, specify its type and value.
      If it generates an error, select type 'NoneType' and put the word 'error' 
      in the box for the value. 

      

        

>>> aList = [0, 1, 2, 3, 4, 5]
>>> bList = aList
>>> aList[2] = 'hello'
>>> aList == bList


          

            

            

        

>>> aList is bList


          

            

            

        

>>> aList


          

            

            

        

>>> bList


          

            

            

        

>>> cList = [6, 5, 4, 3, 2]
>>> dList = []
>>> for num in cList:
        dList.append(num)
>>> cList == dList


          

            

            

        

>>> cList is dList


          

            

            

        

>>> cList[2] = 20
>>> cList


          

            

            

        

>>> dList


          

            

            
