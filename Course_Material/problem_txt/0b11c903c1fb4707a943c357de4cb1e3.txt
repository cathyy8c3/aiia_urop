
  

    
Write a program to calculate the credit card balance
      after one year if a person only pays the minimum monthly
      payment required by the credit card company each month.
The following variables contain values as described below:

      

        
balance

        
annualInterestRate

        
monthlyPaymentRate
For each month, calculate statements on the monthly
      payment and remaining balance. At the end of 12 months, print out the remaining balance. Be sure to print out no more than two decimal digits of accuracy - so print 

      
Remaining balance: 813.41
instead of 

      
Remaining balance: 813.4141998135 
So your program only prints out one thing: the remaining balance at the end of the year in the format:

      
Remaining balance: 4784.0
A summary of the required math is found below:

      
Monthly interest rate
Minimum monthly payment
Monthly unpaid balance
Updated balance each month
We provide sample test cases below.

      
Test Cases to Test Your Code With. Be sure to test these on your own machine - 
	and that you get the same output! - before running your code on this webpage!

        

          
Click to See Problem 1 Test Cases 

          
Note:
Test Cases:

            

              

                

	      # Test Case 1:
	      balance = 42
	      annualInterestRate = 0.2
	      monthlyPaymentRate = 0.04
	      
	      # Result Your Code Should Generate Below:
	      Remaining balance: 31.38
                    
          # To make sure you are doing calculation correctly, this is the 
          # remaining balance you should be getting at each month for this example
            Month 1 Remaining balance: 40.99
            Month 2 Remaining balance: 40.01
            Month 3 Remaining balance: 39.05
            Month 4 Remaining balance: 38.11
            Month 5 Remaining balance: 37.2
            Month 6 Remaining balance: 36.3
            Month 7 Remaining balance: 35.43
            Month 8 Remaining balance: 34.58
            Month 9 Remaining balance: 33.75
            Month 10 Remaining balance: 32.94
            Month 11 Remaining balance: 32.15
            Month 12 Remaining balance: 31.38

                

              

                


	      Test Case 2:
	      balance = 484
	      annualInterestRate = 0.2
	      monthlyPaymentRate = 0.04
	      
	      Result Your Code Should Generate Below:
	      Remaining balance: 361.61

                

    

      

# Paste your code into this box


{"grader": "ps02/paymin/grade_paymin.py"}


    

      
Hints

        

          
Only two decimal digits of accuracy?

          
Use the 
round

        

          
How to think about this problem?

          
To help you get started, here is a rough outline of the stages 
	  you should probably follow in writing your code:

            

              
For each month:

                

                  
Compute the monthly payment, based on the previous
		  monthâ€™s balance.

                  
Update the outstanding balance by removing the payment,
	      then charging interest on the result.

                  
Output the month, the minimum monthly payment and the
	      remaining balance.

                  
Keep track of the total amount of paid over all
              the past months so far.

              
Print out the result statement with the total amount
          paid and the remaining balance.
Use these ideas to guide the creation of your code.

      
Important

        

          
Only hit "Check" once per submission. You only get 30 checks per problem.

          
** Our automatic grader may take a few minutes to respond with feedback. If you hit "Check" 
	multiple times, you will lose a check for every press of the button.
** If you're unfamiliar with how our autograder works, first try out one of the infinite check problems
	in the Functions lecture sequence.
** Please be judicious with your checks, as we are unable to give you more than 30 checks. However 
	this should be more than sufficient: if you do your code development in your local environment, and ensure you
	can pass our test cases, you should not require more than a few checks once you paste your working,
	tested code into our code box.

        

          
If you believe you have correct code but it is marked incorrect after clicking "Check"...

          
** After you submit your code, you can see every test case the graders runs on your code. They compare what your code outputs with what our answer code is supposed to output. Click the small link titled "See Full Output" below the Test Results header.

        

          
"Staff Debug: L397 Error" means your code has an infinite loop...

          
** Clicking Check may give you the error:
There was a problem running your solution (Staff debug: L379).
We couldn't run your solution (Staff debug: L397).

        

          
Do not define your own values

          
** For problems such as these, do not include 
input
should not
balance
annualInterestRate
monthlyPaymentRate
