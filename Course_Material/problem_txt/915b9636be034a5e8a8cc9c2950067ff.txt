
  

    

      
ESTIMATED TIME TO COMPLETE: 8 minutes

def ignore_spaces(expect, ans):
  return expect==ans or expect.replace(' ','') == ans.replace(' ','')


      

        
Consider the following code:
class Clock(object):
    def __init__(self, time):
	self.time = time
    def print_time(self):
	time = '6:30'
	print(self.time)

clock = Clock('5:30')
clock.print_time()
What does the code print out? If you aren't sure, create a Python file and run it.

          

            

          

            

              

                
Explanation:
5:30
self.time
time

        
Consider the following code:
class Clock(object):
    def __init__(self, time):
	self.time = time
    def print_time(self, time):
	print(time)

clock = Clock('5:30')
clock.print_time('10:30')
What does the code print out? If you aren't sure, create a Python file and run it.

          

            

          

            

              

                
Explanation:
What does this problem tell us about giving parameters the same name as object attributes?
In short, it is needlessly confusing. It is less confusing if you give parameters, local variables, 
	    and attributes different, distinct names to avoid the confusion that arises in this problem.

        
Consider the following code:
class Clock(object):
    def __init__(self, time):
        self.time = time
    def print_time(self):
        print(self.time)

boston_clock = Clock('5:30')
paris_clock = boston_clock
paris_clock.time = '10:30'
boston_clock.print_time()
What does the code print out? If you aren't sure, create a Python file and run it.

          

            
Are 
boston_clock
paris_clock

          

            

              

                

                  
 Yes

                

                  
No

          

            

              

                
Explanation:
boston_clock
paris_clock
aliasing
