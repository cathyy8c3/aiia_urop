
  

    
Now write a program that calculates the minimum 
fixed
In this problem, we will 
not
The following variables contain values as described below:

      

        
balance

        
annualInterestRate
 The program should print out one line: the lowest monthly payment that 
      will pay off all debt in under 1 year, for example: 

      
Lowest Payment: 180 
Assume that the interest is compounded monthly according
        to the balance at the end of the month (after the
        payment for that month is made). The monthly payment must
        be a multiple of $10 and is the same for all months. Notice
        that it is possible for the balance to become negative
        using this payment scheme, which is okay. A summary of the required math is found below:

      
Monthly interest rate
Monthly unpaid balance
Updated balance each month

      
Test Cases to Test Your Code With.

        

          
Click to See Problem 2 Test Cases 

          
Be sure to test these on your own machine - 
	and that you get the same output! - before running your code on this webpage!
Test Cases:

            

              

                

                  

	      Test Case 1:
	      balance = 3329
	      annualInterestRate = 0.2

	      Result Your Code Should Generate:
	      -------------------
	      Lowest Payment: 310
      

              

                

                  

	      Test Case 2:
	      balance = 4773
	      annualInterestRate = 0.2
	      
	      Result Your Code Should Generate:
	      -------------------
	      Lowest Payment: 440
      

              

                

                  

	      Test Case 3:
	      balance = 3926
	      annualInterestRate = 0.2

	      Result Your Code Should Generate:
	      -------------------
	      Lowest Payment: 360
    

    

      

# Paste your code into this box


{"grader": "ps02/payoffdebt/grade_payoffdebt.py"}


    

      
Hints

        

          
Hint: How to think about this problem? 

          

            
Start with $10 payments per month and calculate whether
        the balance will be paid off in a year this way (be sure to take into account the
        interest accrued each month). 
If $10 monthly payments are insufficient to pay off the debt within a year, increase
        the monthly payment by $10 and repeat. 

        

          
Hint: A way of structuring your code

          

            
If you are struggling with how to structure your code, think about
	the following:
	
Given an initial balance, what code would compute the
	    balance at the end of the year?
Now imagine that we try our initial balance with a monthly
	    payment of $10. If there is a balance remaining at the end
	    of the year, how could we write code that would reset the
	    balance to the initial balance, increase the payment by $10, 
	    and try again (using the same code!) to compute the balance at the
	    end of the year, to see if this new payment value is large enough.
I'm still confused!

		A good way to implement this problem will be to use a loop structure. You may want to refresh your
		understanding of 
while
Be careful - you don't want to overwrite the original value of 
balance
Reminder:

      
Important

        

          
Only hit "Check" once per submission. You only get 30 checks per problem.

          
** Our automatic grader may take a few minutes to respond with feedback. If you hit "Check" 
	multiple times, you will lose a check for every press of the button.
** If you're unfamiliar with how our autograder works, first try out one of the infinite check problems
	in the Functions lecture sequence.
** Please be judicious with your checks, as we are unable to give you more than 30 checks. However 
	this should be more than sufficient: if you do your code development in your local environment, and ensure you
	can pass our test cases, you should not require more than a few checks once you paste your working,
	tested code into our code box.

        

          
If you believe you have correct code but it is marked incorrect after clicking "Check"...

          
** After you submit your code, you can see every test case the graders runs on your code. They compare what your code outputs with what our answer code is supposed to output. Click the small link titled "See Full Output" below the Test Results header.

        

          
"Staff Debug: L397 Error" means your code has an infinite loop...

          
** Clicking Check may give you the error:
There was a problem running your solution (Staff debug: L379).
We couldn't run your solution (Staff debug: L397).

        

          
Do not define your own values

          
** For problems such as these, do not include 
input
should not
balance
annualInterestRate
