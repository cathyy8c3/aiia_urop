<problem attempts="5">
  <text>
    <p>McDonaldâ€™s sells Chicken McNuggets in packages of 6, 9 or 20 McNuggets. Thus, it
      is possible, for example, to buy exactly 15 McNuggets (with one package of 6 and a
      second package of 9), but it is not possible to buy exactly 16 McNuggets, since no non-
      negative integer combination of 6's, 9's and 20's add up to 16. To determine if it is
      possible to buy exactly <i>n</i> McNuggets, one has to find non-negative integer (can be 0) values of
      <i>a</i>, <i>b</i>, and <i>c</i> such that</p>
    <p>[mathjax]6a + 9b + 20c = n[/mathjax]</p>
    <p>Write a function, called <code>McNuggets</code> that takes one argument, <code>n</code>, 
      and returns True if it is possible to buy a combination of 6, 9 and 20 pack units 
      such that the total number of McNuggets equals <code>n</code>, and otherwise returns False. 
      Hint: use a guess and check approach.</p>
  </text>
  <coderesponse queuename="Watcher-MITx-6.00x">
    <textbox rows="30" cols="70" mode="python" tabsize="4"/>
    <codeparam>
      <initial_display>
def McNuggets(n):
    """
    n is an int

    Returns True if some integer combination of 6, 9 and 20 equals n
    Otherwise returns False.
    """
    # Your Code Here
</initial_display>
      <grader_payload>
        {"grader": "exam1/F2012/mcnuggets/grade_mcnuggets.py", "hide_output": true}
</grader_payload>
    </codeparam>
  </coderesponse>
</problem>
