<problem>
  <text>
    <p>
      Write a Python function that takes in two lists and calculates whether they are permutations of each other. The lists can contain both integers and strings. We define a permutation as follows:</p>
    <ul>
      <li>the lists have the same number of elements</li>
      <li>list elements appear the same number of times in both lists</li>
    </ul>
    <p>If the lists are not permutations of each other, the function returns False. <br/>If they are permutations of each other, the function returns a tuple consisting of the following elements:</p>
    <ul>
      <li>the element occuring the most times</li>
      <li>how many times that element occurs</li>
      <li>the type of the element that occurs the most times</li>
    </ul>
    <p>If both lists are empty return the tuple <code>(None, None, None)</code>. If more than one element occurs the most number of times, you can return any of them.</p>
    <pre>def is_list_permutation(L1, L2):
    '''
    L1 and L2: lists containing integers and strings
    Returns False if L1 and L2 are not permutations of each other. 
            If they are permutations of each other, returns a 
            tuple of 3 items in this order: 
            the element occurring most, how many times it occurs, and its type
    '''
    # Your code here</pre>
    <p>For example,</p>
    <ul>
      <li>if <code>L1 = ['a', 'a', 'b']</code> and <code>L2 = ['a', 'b']</code> then <code>is_list_permutation</code> returns <code>False</code></li>
      <li>if <code>L1 = [1, 'b', 1, 'c', 'c', 1]</code> and <code>L2 = ['c', 1, 'b', 1, 1, 'c']</code> then <code>is_list_permutation</code> returns <code>(1, 3, &lt;class 'int'&gt;)</code> because the integer 1 occurs the most, 3 times, and the type of 1 is an integer (note that the third element in the tuple is not a string).</li>
    </ul>
    <p>Paste your entire function, including the definition, in the box below. Do not leave any debugging print statements.</p>
  </text>
  <coderesponse queuename="Watcher-MITx-6.00x">
    <textbox rows="30" cols="80" mode="python" tabsize="4"/>
    <codeparam>
      <initial_display># Paste your function here</initial_display>
      <answer_display>
</answer_display>
      <grader_payload>
{"grader": "ase/is_list_permutation/grade_is_list_permutation.py", "hide_output": false}
</grader_payload>
    </codeparam>
  </coderesponse>
</problem>
