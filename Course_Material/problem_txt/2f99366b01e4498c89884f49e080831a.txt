
  

    

      
ESTIMATED TIME TO COMPLETE: 5 minutes
Here is some code for linear search that uses the fact that a set of elements is sorted in increasing order: 
def search(L, e):
    for i in range(len(L)):
        if L[i] == e:
            return True
        if L[i] > e:
            return False
    return False

Consider the following code, which is an alternative version of 
search
def search3(L, e):
    if L[0] == e:
        return True
    elif L[0] > e:
        return False
    else:
        return search3(L[1:], e)

Which of the following statements is correct? You may assume that each function is tested with a list 
L
L

      

        

          

            

              
search
search3

            

              
search
search3
L

            

              
search
search3
L
e
L

            

              
search
search3

            

              
search
search3

      

        

          

            
Explanation:
search3
L
e
L
 if L[0] == e: 
If 
L
L[0]
e
L
L
L
search3
def search3(L, e):
    print("List L: " + str(L))
    if L[0] == e:
        return True
    elif L[0] > e:
        return False
    else:
        return search3(L[1:], e)
Run the following two calls and watch the print out carefully. 
search3([], 4)
search3([1, 2, 3], 4)

            

              

                

                  
How would you change search3 to avoid this problem?

                  

The easiest way to modify 
search3
def search3(L, e):
    # Test if the list is empty - if it is, e cannot be in it!
    # Run this test first - so that we don't throw an error trying
    #  to access L[0].
    if L == []:
        return False

    if L[0] == e:
        return True
    elif L[0] > e:
        return False
    else:
        return search3(L[1:], e)
