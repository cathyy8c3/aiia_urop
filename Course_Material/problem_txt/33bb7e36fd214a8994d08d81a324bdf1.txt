
  
Assume 
s
Write a program that prints the longest substring of 
s
s = 'azcbobobegghakl'

    
Longest substring in alphabetical order is: beggh
In the case of ties, print the first substring.  For example, if 
s = 'abcbcd'

    
Longest substring in alphabetical order is: abc
Note: This problem may be challenging. We encourage you to work smart. If you've spent more than a few hours on this problem, we suggest that you move on to a different part of the course. If you have time, come back to this problem after you've had a break and cleared your head.

    

      
# Paste your code into this box 

curString = s[0]
longest = s[0]
for i in range(1, len(s)):
    if s[i] >= curString[-1]:
        curString += s[i]
        if len(curString) > len(longest):
            longest = curString
    else:
        curString = s[i]
print 'Longest substring in alphabetical order is:', longest


{"grader": "chips1/alphasubs/grade_alphasubs.py"}


    

      
Important

        

          
Only hit "Check" once per submission. You only get 30 checks per problem.

          
** Our automatic grader may take a few minutes to respond with feedback. If you hit "Check" 
	multiple times, you will lose a check for every press of the button.
** If you're unfamiliar with how our autograder works, first try out one of the infinite check problems in the lecture sequences.
** Please be judicious with your checks, as we are unable to give you more than 30 checks. However 
	this should be more than sufficient: if you do your code development in your local environment, and ensure you
	can pass our test cases, you should not require more than a few checks once you paste your working,
	tested code into our code box.

        

          
If you believe you have correct code but it is marked incorrect after clicking "Check"...

          
** After you submit your code, you can see every test case the graders runs on your code. They compare what your code outputs with what our answer code is supposed to output. Click the small link titled "See Full Output" below the Test Results header.

        

          
"Staff Debug: L397 Error" means your code has an infinite loop...

          
** Clicking Check may give you the error:
There was a problem running your solution (Staff debug: L379).
We couldn't run your solution (Staff debug: L397).

        

          
Do not define your own values

          
** For problems such as these, do not include 
input
