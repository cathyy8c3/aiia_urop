<problem>
  <text>
    <p>
      Implement a function that meets the specifications below. </p>
    <pre>def cipher(map_from, map_to, code):
    """ map_from, map_to: strings where each contain 
                          N unique lowercase letters. 
        code: string (assume it only contains letters also in map_from)
        Returns a tuple of (key_code, decoded).
        key_code is a dictionary with N keys mapping str to str where 
        each key is a letter in map_from at index i and the corresponding 
        value is the letter in map_to at index i. 
        decoded is a string that contains the decoded version 
        of code using the key_code mapping. """
    # Your code here</pre>
    <p/>
    <p>For example, </p>
    <ul>
      <li><code>cipher("abcd", "dcba", "dab")</code> returns (order of entries in dictionary may not be the same) <code>({'a':'d', 'b': 'c', 'd': 'a', 'c': 'b'}, 'adc')</code></li>
    </ul>
    <p>Paste your entire function, including the definition, in the box below. Do not leave any debugging print statements.</p>
  </text>
  <coderesponse queuename="Watcher-MITx-6.00x">
    <textbox rows="30" cols="80" mode="python" tabsize="4"/>
    <codeparam>
      <initial_display># Paste your function here</initial_display>
      <answer_display>
      </answer_display>
      <grader_payload>
        {"grader": "quiz/60001_s2017/cipher/grade_cipher.py", "hide_output": true}
</grader_payload>
    </codeparam>
  </coderesponse>
</problem>
