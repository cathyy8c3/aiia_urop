<problem>
  <text>
    <p>
      Write a recursive Python function, given a non-negative integer <code>N</code>, to calculate
      and return the sum of its digits.</p>
    <p>Hint: Mod (%) by 10 gives you the rightmost digit (<code>126 % 10</code> is 6), while doing
      integer division by 10 removes the rightmost digit (<code>126 // 10</code> is 12).</p>
    <p>This function has to be recursive; you may not use loops!</p>
    <p>This function takes in one integer and returns one integer.</p>
    <pre>def sumDigits(N):
    '''
    N: a non-negative integer
    '''
    # Your code here
    </pre>
  </text>
  <coderesponse queuename="Watcher-MITx-6.00x">
    <textbox rows="30" cols="80" mode="python" tabsize="4"/>
    <codeparam>
      <initial_display># Paste your function here</initial_display>
      <answer_display>
def sumDigits(N):
    if N == 0:
        return 0
    mySum = N % 10
    return sumDigits(N/10) + mySum
</answer_display>
      <grader_payload>
{"grader": "finger_exercises/L5/sum_digits/grade_sum_digits.py", "hide_output": true}
</grader_payload>
    </codeparam>
  </coderesponse>
</problem>
