<problem display_name="Problem 3" markdown="null" showanswer="never">
  <p>For this problem, the graders will use our implementation of the <code>Message</code> and <code>PlaintextMessage</code> classes, so don't worry if you did not get the previous parts correct.</p>
  <p>Given an encrypted message, if you know the shift used to encode the message, decoding it is trivial.
    If <code>message</code> is the encrypted message, and <code>s</code> is the shift used to encrypt the
    message, then <code>apply_shift(message, 26-s)</code>
gives you the original plaintext
    message. Do you see why? </p>
  <p>The problem, of course, is that you donâ€™t know the shift. But our encryption
method only has 26 distinct possible values for the shift! We know English is the
main language of these emails, so if we can write a program that tries each shift
and maximizes the number of English words in the decoded message, we can
decrypt their cipher! A simple indication of whether or not the correct shift has been found is if most of the words obtained after a shift are valid words. Note that this only means that most of the words obtained are actual words. It is possible to have a message that can be decoded by two separate shifts into different sets of words. While there are various strategies for deciding between ambiguous decryptions, for this problem we are only looking for a simple solution.</p>
  <p>Fill in the methods in the class <code>CiphertextMessage</code> acording to the specifications in ps6.py. The methods you should fill in are:</p>
  <ul>
    <li><code>__init__(self, text)</code>: Use the parent class constructor to make your code more
      concise.</li>
    <li><code>decrypt_message(self)</code>: You may find the helper function <code>is_word(wordlist, word)</code> and the string <a href="https://docs.python.org/2/library/stdtypes.html#str.split" target="_blank">method <code>split()</code></a> useful. Note that <code>is_word</code> will ignore punctuation and other special characters when considering whether a word is valid.</li>
  </ul>
  <section class="hints">
    <h3>Hints</h3>
    <div class="collapsible">
      <header>
        <a href="#" id="ht1">Using string.split </a>
      </header>
      <section id="ht1">
        <p>You may find the function <code>string.split</code> useful for 
	dividing the text up into words. </p>
        <pre>&gt;&gt;&gt; 'Hello world!'.split('o')
['Hell', ' w', 'rld!']
&gt;&gt;&gt; '6.00.1x is pretty fun'.split(' ')
['6.00.1x', 'is', 'pretty', 'fun']</pre>
      </section>
    </div>
  </section>
  <br/>
  <p>Paste your implementation of the entire <code>CipertextMessage</code> class in the box below.</p>
  <coderesponse queuename="Watcher-MITx-6.00x">
    <textbox rows="30" cols="70" mode="python" tabsize="4"/>
    <codeparam>
      <initial_display>
</initial_display>
      <grader_payload>
{"grader": "ps06/caesar3/grade_ciphertextmessage.py"}
</grader_payload>
    </codeparam>
  </coderesponse>
</problem>
