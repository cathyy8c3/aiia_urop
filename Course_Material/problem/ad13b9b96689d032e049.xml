<problem attempts="5">
  <text>
    <p>Write a simple procedure, <code>myLog(x, b)</code>, that computes the logarithm of a 
      number <i>x</i> relative to a base <i>b</i>.  For example, if <i>x = 16</i> and 
      <i>b = 2</i>, then the result is 4 - because [mathjaxinline]2^4 = 16[/mathjaxinline].  
      If <i>x = 15</i> and <i>b = 3</i>, then the result is 2 - because 
      [mathjaxinline]3^2[/mathjaxinline] is the largest power of 3 less than 15.</p>
    <p>In other words, <code>myLog</code> should return the largest power of <i>b</i> 
      such that <i>b</i> to that power is still less than or equal to <i>x</i>.</p>
    <p><i>x</i> and <i>b</i> are both positive integers; <i>b</i> is an integer greater than or
      equal to 2. Your function should return an integer answer.</p>
    <pre>def myLog(x, b):
    '''
    x: a positive integer
    b: a positive integer; b &gt;= 2

    returns: log_b(x), or, the logarithm of x relative to a base b.
    '''
    # Your Code Here</pre>
    <p>Do <b>not</b> use Python's <code>log</code> functions; instead, please use an 
      iterative or recursive solution to this problem that uses simple arithmatic operators 
      and conditional testing.</p>
  </text>
  <coderesponse queuename="Watcher-MITx-6.00x">
    <textbox rows="30" cols="70" mode="python" tabsize="4"/>
    <codeparam>
      <initial_display># Paste your function here</initial_display>
      <grader_payload>
        {"grader": "exam1/F2012/myLog/grade_myLog.py", "hide_output":false}
      </grader_payload>
    </codeparam>
  </coderesponse>
</problem>
