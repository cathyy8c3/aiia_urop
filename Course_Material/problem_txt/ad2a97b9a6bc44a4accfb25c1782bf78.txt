
  

    

      
ESTIMATED TIME TO COMPLETE: 6 minutes

Consider the following sequence of expressions: 

animals = { 'a': ['aardvark'], 'b': ['baboon'], 'c': ['coati']}

animals['d'] = ['donkey']
animals['d'].append('dog')
animals['d'].append('dingo')


We want to write some simple procedures that work on dictionaries to return information. 

First, write a procedure, called 
how_many

>>> print(how_many(animals))
6


    

      

def how_many(aDict):
    '''
    aDict: A dictionary, where all the values are lists.

    returns: int, how many values are in the dictionary.
    '''
    # Your Code Here


def how_many(aDict):
    '''
    aDict: A dictionary, where all the values are lists.

    returns: int, how many individual values are in the dictionary.
    '''
    result = 0
    for value in aDict.values():
        # Since all the values of aDict are lists, aDict.values() will 
        #  be a list of lists
        result += len(value)
    return result

def how_many(aDict):
    '''
    Another way to solve the problem.

    aDict: A dictionary, where all the values are lists.

    returns: int, how many individual values are in the dictionary.
    '''
    result = 0
    for key in aDict.keys():
        result += len(aDict[key])
    return result


{"grader": "finger_exercises/L6/how_many/grade_how_many.py"}

Important:
Incorrect: Something went wrong: tests don't match up.
