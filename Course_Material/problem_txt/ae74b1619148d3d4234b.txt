
  

    

      Write a Python function that takes in two lists and calculates whether they are permutations of each other. The lists can contain both integers and strings. We define a permutation as follows:

      
the lists have the same number of elements
list elements appear the same number of times in both lists
If the lists are not permutations of each other, the function returns False. 

      
the element occuring the most times
how many times that element occurs
the type of the element that occurs the most times
If both lists are empty return the tuple 
(None, None, None)
def is_list_permutation(L1, L2):
    '''
    L1 and L2: lists containing integers and strings
    Returns False if L1 and L2 are not permutations of each other. 
            If they are permutations of each other, returns a 
            tuple of 3 items in this order: 
            the element occurring most, how many times it occurs, and its type
    '''
    # Your code here
For example,

      
if 
L1 = ['a', 'a', 'b']
L2 = ['a', 'b']
is_list_permutation
False
if 
L1 = [1, 'b', 1, 'c', 'c', 1]
L2 = ['c', 1, 'b', 1, 1, 'c']
is_list_permutation
(1, 3, <class 'int'>)
Paste your entire function, including the definition, in the box below. Do not leave any debugging print statements.

    

      
# Paste your function here



{"grader": "ase/is_list_permutation/grade_is_list_permutation.py", "hide_output": false}

